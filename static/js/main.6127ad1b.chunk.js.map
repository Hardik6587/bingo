{"version":3,"sources":["Bingo/BingoCard/BingoCard.jsx","utils/utils.js","Bingo/Bingo.jsx","App.js","reportWebVitals.js","index.js"],"names":["BingoCard","item","cardIndex","selectCard","className","selected","bingo","src","image","alt","name","onClick","getAllPlayers","checkOrSetRowBingo","rowIndex","bingoList","setBingo","rowBingo","i","checkOrSetColBingo","colIndex","colBingo","checkForwardDiagBingo","forwardBingo","checkReverseDiagBingo","reverseBingo","utils","getRandomNumberForLoading","Math","floor","random","getBingoList","playerList","newSet","Set","size","newNumber","length","add","randomNumbers","player","push","checkBingo","index","list","row","parseInt","col","Bingo","forwardRef","ref","setLoading","useState","slice","items","setItems","gameReset","setResetGame","useImperativeHandle","resetBingo","useEffect","allBingoCards","document","querySelectorAll","interval","setInterval","nextNumber","nextCard","classList","setTimeout","remove","clearInterval","newList","map","App","isLoading","letsPlay","setLetsPlay","bingoRef","useRef","current","loadingFlag","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6127ad1b.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport './BingoCard.css';\r\n\r\nconst BingoCard = ({\r\n    item,\r\n    cardIndex,\r\n    selectCard\r\n}) => {\r\n    //Calling Select Card from parent fn\r\n    const selectBingoCard = () => {\r\n        selectCard(cardIndex);\r\n    }\r\n    return (\r\n        <div className=\"bingo-card\">\r\n            {   item.selected && !item.bingo\r\n                && <img className=\"bingo-selected\" src={item.image} alt={item.name}/>\r\n            }\r\n            {   !item.selected\r\n                && <span className=\"card-name\" onClick={selectBingoCard}> {item.name} </span>\r\n            }\r\n            {   item.bingo\r\n                && (\r\n                    <>\r\n                <img className=\"bingo-done\" src=\"/images/bingo.jpg\" alt={item.name}/>\r\n                <span className=\"bingo-player\"> {item.name} </span>\r\n                </>)\r\n            }\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default BingoCard;\r\n","// Dummy player to display\r\n// 5 teams with 8 players each\r\nconst getAllPlayers = () => {\r\n    return [{\r\n        name: 'Alisson Becker', selected: false, image: '/images/liverpool1.jpg'\r\n    }, {\r\n        name: 'Jordan Henderson', selected: false, image: '/images/liverpool2.jpg'\r\n    }, {\r\n        name: 'Virgil Van Daijk', selected: false, image: '/images/liverpool3.jpg'\r\n    }, {\r\n        name: 'Andrew Robertson', selected: false, image: '/images/liverpool4.jpg'\r\n    }, {\r\n        name: 'Steven Gerrard', selected: false, image: '/images/liverpool5.jpg'\r\n    }, {\r\n        name: 'Xander Shakiri', selected: false, image: '/images/liverpool6.jpg'\r\n    }, {\r\n        name: 'Mohamed Salah', selected: false, image: '/images/liverpool7.jpg'\r\n    }, {\r\n        name: 'Bobby Firminho', selected: false, image: '/images/liverpool8.jpg'\r\n    }, {\r\n        name: 'Roman BÃ¼rki', selected: false, image: '/images/dortmund1.jpg'\r\n    }, {\r\n        name: 'Dan-Axel Zagadou', selected: false, image: '/images/dortmund2.jpg'\r\n    }, {\r\n        name: 'Jadon Sancho', selected: false, image: '/images/dortmund3.jpg'\r\n    }, {\r\n        name: 'Mahmoud Dahoud', selected: false, image: '/images/dortmund4.jpg'\r\n    }, {\r\n        name: 'Erling Haaland', selected: false, image: '/images/dortmund5.jpg'\r\n    }, {\r\n        name: 'Marco Reus', selected: false, image: '/images/dortmund6.jpg'\r\n    }, {\r\n        name: 'Mats Hummels', selected: false, image: '/images/dortmund7.jpg'\r\n    }, {\r\n        name: 'Nico Schulz', selected: false, image: '/images/dortmund8.jpg'\r\n    }, {\r\n        name: 'Manuel Neuer', selected: false, image: '/images/munich1.jpg'\r\n    }, {\r\n        name: 'Benjamin Pavard', selected: false, image: '/images/munich2.jpg'\r\n    }, {\r\n        name: 'Serge Gnabry', selected: false, image: '/images/munich3.jpg'\r\n    }, {\r\n        name: 'Robert Lewandowski', selected: false, image: '/images/munich4.jpg'\r\n    }, {\r\n        name: 'Leroy SanÃ©', selected: false, image: '/images/munich5.jpg'\r\n    }, {\r\n        name: 'Douglas Costa', selected: false, image: '/images/munich6.jpg'\r\n    }, {\r\n        name: 'JÃ©rÃ´me Boateng', selected: false, image: '/images/munich7.jpg'\r\n    }, {\r\n        name: 'Thomas MÃ¼ller', selected: false, image: '/images/munich8.jpg'\r\n    }, {\r\n        name: 'Paul Pogba', selected: false, image: '/images/manchester1.jpg'\r\n    }, {\r\n        name: 'Edinson Cavani', selected: false, image: '/images/manchester2.jpg'\r\n    }, {\r\n        name: 'Bruno Fernandes', selected: false, image: '/images/manchester3.jpg'\r\n    }, {\r\n        name: 'Harry Maguire', selected: false, image: '/images/manchester4.jpg'\r\n    }, {\r\n        name: 'Donny van de Beek', selected: false, image: '/images/manchester5.jpg'\r\n    }, {\r\n        name: 'Luke Shaw', selected: false, image: '/images/manchester6.jpg'\r\n    }, {\r\n        name: 'Fred', selected: false, image: '/images/manchester7.jpg'\r\n    }, {\r\n        name: 'Marcus Rashford', selected: false, image: '/images/manchester8.jpg'\r\n    }, {\r\n        name: 'Marc-AndrÃ© ter Stegen', selected: false, image: '/images/barcelona1.jpg'\r\n    }, {\r\n        name: 'Gerard PiquÃ©', selected: false, image: '/images/barcelona2.jpg'\r\n    }, {\r\n        name: 'Sergio Busquets', selected: false, image: '/images/barcelona3.jpg'\r\n    }, {\r\n        name: 'Antoine Griezmann', selected: false, image: '/images/barcelona4.jpg'\r\n    }, {\r\n        name: 'Lionel Messi', selected: false, image: '/images/barcelona5.jpg'\r\n    }, {\r\n        name: 'Philippe Coutinho', selected: false, image: '/images/barcelona6.jpg'\r\n    }, {\r\n        name: 'Jordi Alba', selected: false, image: '/images/barcelona7.jpg'\r\n    }, {\r\n        name: 'Sergi Roberto', selected: false, image: '/images/barcelona8.jpg'\r\n    }];\r\n}\r\n\r\n// random number generator for fetching the player from array index\r\nconst getRandomNumberForLoading = () => {\r\n    return Math.floor(Math.random()* 25);\r\n};\r\n\r\n// getting 25 player randomly from the array\r\nconst getBingoList = () => {\r\n    const playerList = getAllPlayers();\r\n    const newSet = new Set();\r\n    while(newSet.size !== 25) {\r\n        const newNumber = Math.floor(Math.random()*playerList.length);\r\n        newSet.add(newNumber);\r\n    }\r\n    const randomNumbers = [...newSet];\r\n    const bingoList = [];\r\n    for(let i=0 ;i<25; i++){\r\n        const player = playerList[randomNumbers[i]];\r\n        if(i === 12) {\r\n            player.selected = true;\r\n        }\r\n        bingoList.push(player);\r\n    }\r\n    return bingoList;\r\n};\r\n\r\n// Checking bingo on row which card is selected\r\nconst checkOrSetRowBingo = (rowIndex, bingoList, setBingo = false) => {\r\n    let rowBingo = true;\r\n    for(let i=rowIndex; i<rowIndex+5; i++) {\r\n        if(setBingo) {\r\n            bingoList[i].bingo = true;\r\n        } else if(bingoList[i].selected !== true) {\r\n            rowBingo = false;\r\n            break;\r\n        }\r\n    }\r\n    return rowBingo;\r\n};\r\n\r\n// Checking bingo on column which card is selected\r\nconst checkOrSetColBingo = (colIndex, bingoList, setBingo = false) => {\r\n    let colBingo = true;\r\n    for(let i=0; i<5; i++) {\r\n        if(setBingo) {\r\n            bingoList[(colIndex+(i*5))].bingo = true;\r\n        } else if(bingoList[(colIndex+(i*5))].selected !== true) {\r\n            colBingo = false;\r\n            break;\r\n        }\r\n    }\r\n    return colBingo;\r\n};\r\n\r\n// checking forward diagonal Bingo\r\nconst checkForwardDiagBingo = (bingoList, setBingo = false) => {\r\n    let forwardBingo = true;\r\n    for(let i=0; i<5; i++) {\r\n        if(setBingo) {\r\n            bingoList[(i*5) + i].bingo = true;\r\n        }\r\n        if(bingoList[(i*5) + i].selected !== true) {\r\n            forwardBingo = false;\r\n            break;\r\n        }\r\n    }\r\n    return forwardBingo;\r\n};\r\n\r\n// Checking reverse diagonal bingo\r\nconst checkReverseDiagBingo = (bingoList, setBingo = false) => {\r\n    let reverseBingo = true;\r\n    for(let i=1; i<=5; i++) {\r\n        if(setBingo) {\r\n            bingoList[(i*5) - i].bingo = true;\r\n        }\r\n        if(bingoList[(i*5) - i].selected !== true) {\r\n            reverseBingo = false;\r\n            break;\r\n        }\r\n    }\r\n    return reverseBingo;\r\n};\r\n\r\n// fn to check any possible bingo\r\nconst checkBingo = (index, list) => {\r\n    const row = parseInt(index/5) * 5;\r\n    const col = parseInt(index%5);\r\n\r\n    const rowBingo = checkOrSetRowBingo(row, list);\r\n    if(rowBingo) {\r\n        checkOrSetRowBingo(row, list, true);\r\n    }\r\n    \r\n    const columnBingo = checkOrSetColBingo(col, list);\r\n    if(columnBingo) {\r\n        checkOrSetColBingo(col, list, true);\r\n    }\r\n\r\n    const forwardBingo = checkForwardDiagBingo(list);\r\n    if(forwardBingo) {\r\n        checkForwardDiagBingo(list, true);\r\n    }\r\n\r\n    const reverseBingo = checkReverseDiagBingo(list);\r\n    if(reverseBingo) {\r\n        checkReverseDiagBingo(list, true);\r\n    }\r\n};\r\n\r\n\r\nconst utils = {\r\n    getRandomNumberForLoading,\r\n    getBingoList,\r\n    checkOrSetRowBingo,\r\n    checkOrSetColBingo,\r\n    checkBingo,\r\n    getAllPlayers\r\n}\r\n\r\nexport default utils;","\r\nimport React, { useState, useEffect, forwardRef, useImperativeHandle } from 'react';\r\nimport BingoCard from './BingoCard/BingoCard'\r\nimport utils from '../utils/utils';\r\nimport './Bingo.css';\r\n\r\nconst Bingo = forwardRef(({\r\n    setLoading\r\n}, ref) => {\r\n    // setting intial dummy data for loading scene\r\n    const [items, setItems] = useState(utils.getAllPlayers().slice(0, 25)); \r\n    // reset game scene flag\r\n    const [gameReset, setResetGame] = useState(true); // reset game state\r\n    // resetting game with dummy data and playing scene\r\n    const resetGame = () => {\r\n        setLoading(true);\r\n        setItems(utils.getAllPlayers().slice(0, 25));\r\n        setResetGame(true);\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        resetBingo() {\r\n            resetGame();\r\n        }\r\n    }));\r\n\r\n    // reset game scene\r\n    useEffect(() => {\r\n        if(gameReset) {\r\n            const allBingoCards = document.querySelectorAll('.bingo-card');\r\n            const interval = setInterval(() => {\r\n                const nextNumber = utils.getRandomNumberForLoading();\r\n                const nextCard = allBingoCards[nextNumber];\r\n                nextCard.classList.add('bingo-card-load');\r\n                setTimeout(() => {\r\n                    nextCard.classList.remove('bingo-card-load');\r\n                }, 90);\r\n                \r\n            }, 100);\r\n            setTimeout(() => {\r\n                clearInterval(interval);\r\n                setLoading(false);\r\n                setItems(utils.getBingoList());\r\n                setResetGame(false);\r\n            }, 3200);\r\n        }\r\n    }, [gameReset]);\r\n\r\n    // select card function\r\n    const selectCard = (index) => {\r\n        const newList = [...items];\r\n        newList[index].selected = true;\r\n        setItems(newList);\r\n        // checking bingo and setting bingo flag if bingo found\r\n        utils.checkBingo(index, newList);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bingo\">\r\n        {\r\n            items && items.map((item, index) => {\r\n                return (\r\n                    <BingoCard \r\n                        key={item.image}\r\n                        item={item}\r\n                        cardIndex={index}\r\n                        selectCard={selectCard}\r\n                    />\r\n                )\r\n          })\r\n        }\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Bingo;\r\n","import React, { useState, useRef } from 'react';\r\nimport Bingo from './Bingo/Bingo';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [isLoading, setLoading] = useState(true); // Show loading message\r\n  const [letsPlay, setLetsPlay] = useState(false); // show lets play message\r\n\r\n  const bingoRef = useRef(null); // reference for Bingo class\r\n\r\n  const resetBingoGame = () => { // resetting Bingo game\r\n    bingoRef.current.resetBingo();\r\n  }\r\n\r\n  const loadNewGame = (loadingFlag) => { // Reset btn game\r\n    setLoading(loadingFlag);\r\n    if(!loadingFlag) {\r\n      setLetsPlay(true);\r\n      setTimeout(setLetsPlay, 2000);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      { isLoading && <div className=\"loading\">Loading...  Please wait...</div>}\r\n      { letsPlay && <div className=\"lets-play\">Game is Loaded. Let's Play</div>}\r\n      <div className=\"app\">\r\n        <header className=\"app-header\">\r\n            Mind Game - Football Bingo\r\n        </header>\r\n        <span className=\"btn\" onClick={resetBingoGame}>Reset Game</span>\r\n        <Bingo setLoading={loadNewGame} ref={bingoRef}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}